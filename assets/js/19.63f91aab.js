(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{625:function(s,t,e){"use strict";e.r(t);var c=e(27),n=Object(c.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"css和js带参数v或version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css和js带参数v或version"}},[s._v("#")]),s._v(" css和js带参数v或version")]),s._v(" "),e("p",[s._v("背景\n     在搜索引擎中搜索关键字.htaccess 缓存，你可以搜索到很多关于设置网站文件缓存的教程，通过设置可以将css、js等不太经常更新的文件缓存在浏览器端，这样访客每次访问你的网站的时候，浏览器就可以从浏览器的缓存中获取css、js等，而不必从你的服务器读取，这样在一定程度上加快了网站的打开速度，又可以节约一下你的服务器流量。")]),s._v(" "),e("p"),s._v(" "),e("p",[s._v("问题\n     现在问题来了，.htaccess设置的css、js缓存都有一个过期时间，如果在访客的浏览器中已经缓存了css、js，在这些css、js缓存未过期之前，浏览器只会从缓存中读取css和js，如果你在服务器上修改了css和js，那么这些更改在回头客的浏览器中是不会有变化的，除非回头客按了Ctrl + F5刷新了你的网站页面或者手动清空了浏览器的缓存。一个网站的访客成千上万，回头客也会有不少，你不可能在更新css后让每个访客都刷新一下缓存吧，那么这个问题你会怎么处理呢？")]),s._v(" "),e("p"),s._v(" "),e("p",[s._v("方法一\n     更改css文件名：其实解决这个问题很简单，缓存是通过文件名标记缓存的内容的。在你更新了网站的css文件内容后，在更换一下css的文件名就可以了。如原先html中的css调用语句如下：")]),s._v(" "),e("link",{attrs:{rel:"stylesheet",href:"style.css"}}),s._v("\n     改一下css文件名就可以了：\n"),e("link",{attrs:{rel:"stylesheet",href:"index.css"}}),s._v("\n     另外一种更改css文件名的方法是将版本号写到文件名中，如：\n"),e("link",{attrs:{rel:"stylesheet",href:"index.v2011.css"}}),s._v("\n     css文件更新后，改一下文件名中的版本号即可：\n"),e("link",{attrs:{rel:"stylesheet",href:"index.v2012.css"}}),s._v("\n方法二\n     给css文件加个版本号：其实每次修改css文件后还要修改css的文件名有点麻烦，那么我们可以在加载css语句中加入个版本号(即css链接中?后面的内容)就可以了。如原先html中的css调用语句如下：\n"),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"style.css?v=2011"}}),s._v("\n     改一下css文件的版本号改成2012就可以了：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"style.css?v=2012"}}),s._v('\n     需要注意的是，部分代理缓存服务器不会缓存网址中包含 "?" 的资源，所以方法二可能会导致你原先的缓存功能失效，可以改用第一种方法。')]),s._v(" "),e("p",[s._v("总结\n     其实css文件后面的问号起不到实际作用，仅能当作后缀，如果用问号加参数的方法，可以添加版本号等信息，同时可以刷新一下浏览器端的缓存。一个小小的细节，可以给我们带来很大的方便。")]),s._v(" "),e("p",[s._v("背景\n     在搜索引擎中搜索关键字.htaccess 缓存，你可以搜索到很多关于设置网站文件缓存的教程，通过设置可以将css、js等不太经常更新的文件缓存在浏览器端，这样访客每次访问你的网站的时候，浏览器就可以从浏览器的缓存中获取css、js等，而不必从你的服务器读取，这样在一定程度上加快了网站的打开速度，又可以节约一下你的服务器流量。")]),s._v(" "),e("p"),s._v(" "),e("p",[s._v("问题\n     现在问题来了，.htaccess设置的css、js缓存都有一个过期时间，如果在访客的浏览器中已经缓存了css、js，在这些css、js缓存未过期之前，浏览器只会从缓存中读取css和js，如果你在服务器上修改了css和js，那么这些更改在回头客的浏览器中是不会有变化的，除非回头客按了Ctrl + F5刷新了你的网站页面或者手动清空了浏览器的缓存。一个网站的访客成千上万，回头客也会有不少，你不可能在更新css后让每个访客都刷新一下缓存吧，那么这个问题你会怎么处理呢？")]),s._v(" "),e("p"),s._v(" "),e("p",[s._v("方法一\n     更改css文件名：其实解决这个问题很简单，缓存是通过文件名标记缓存的内容的。在你更新了网站的css文件内容后，在更换一下css的文件名就可以了。如原先html中的css调用语句如下：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"style.css"}}),s._v("\n     改一下css文件名就可以了：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"index.css"}}),s._v("\n     另外一种更改css文件名的方法是将版本号写到文件名中，如：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"index.v2011.css"}}),s._v("\n     css文件更新后，改一下文件名中的版本号即可：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"index.v2012.css"}}),s._v("\n方法二\n     给css文件加个版本号：其实每次修改css文件后还要修改css的文件名有点麻烦，那么我们可以在加载css语句中加入个版本号(即css链接中?后面的内容)就可以了。如原先html中的css调用语句如下：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"style.css?v=2011"}}),s._v("\n     改一下css文件的版本号改成2012就可以了：")]),s._v(" "),e("p",[s._v("1\t\n"),e("link",{attrs:{rel:"stylesheet",href:"style.css?v=2012"}}),s._v('\n     需要注意的是，部分代理缓存服务器不会缓存网址中包含 "?" 的资源，所以方法二可能会导致你原先的缓存功能失效，可以改用第一种方法。')]),s._v(" "),e("p",[s._v("总结\n     其实css文件后面的问号起不到实际作用，仅能当作后缀，如果用问号加参数的方法，可以添加版本号等信息，同时可以刷新一下浏览器端的缓存。一个小小的细节，可以给我们带来很大的方便。")])])}),[],!1,null,null,null);t.default=n.exports}}]);