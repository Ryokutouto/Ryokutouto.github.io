(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{658:function(t,e,o){"use strict";o.r(e);var r=o(27),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("ctx是context的缩写中文一般叫成上下文(作用域 )，这个在所有语言里都有的名词，可以理解为上(request)下(response)沟通的环境，所以koa中把他们两都封装进了ctx对象，koa官方文档里的解释是为了调用方便，ctx.req=ctx.request,ctx.res=ctx.response，类似linux系统中的软连接？最终执行还是request和response对象")]),t._v(" "),o("p",[t._v("所以第二个问题：")]),t._v(" "),o("p",[t._v("body是http协议中的响应体，header是指响应头")]),t._v(" "),o("p",[t._v("ctx.body = ctx.res.body = ctx.response.body")]),t._v(" "),o("p",[t._v("更详细看github上的官方文档吧")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/koajs/koa/...",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/koajs/koa/"),o("OutboundLink")],1),o("a",{attrs:{href:"https://github.com/koajs/koa/...",target:"_blank",rel:"noopener noreferrer"}},[t._v("..."),o("OutboundLink")],1)]),t._v(" "),o("p",[o("img",{staticClass:"lazy",attrs:{alt:"koa","data-src":"https://cdn.jsdelivr.net/gh/Ryokutouto/images//img/20210311103457.png",loading:"lazy"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);